Perintah Dasar Bash!
ls       : List --> daftar folder dan file // jika file tdk terlihat tambahkan -a
PWD      : Print Working Directory --> Menampilkan path yang lagi dipakai
cd       : Change directory --> Pindah folder 
- cara menggunakan                : cd/nama project atau ketik file yang ingin dipindah lalu tab
- cara kembali ke file sebelumnya : cd ..
Absolute path  : Jalur lengkap menuju sebuah file directory, dimulai dari root directory (biasanya "/") dan mencakup semua subdirektori di sepanjang jalur tersebut. 
Contoh    : home/user/document/project/index.html
Relative Path  : Jalur yang ditentukan relatif terhadap direktori kerja saat ini (current working directory). Tidak dimulai dari root directory. 
Contoh    : ../data/file.txt
mkdir    : membuat direktori baru
rm       : menghapus file/direktori 
rmdir    : hanya menghapus direktori
mv       : memindahkan atau mengganti nama file/direktori
cp       : menyalin file atau direktori

Create :
git init : diketik diterminal akan membuat .git (ya gtu) 
ls -al   : list perubahan setelah ketik git init
git clone: menyalin suatu project atau code di github, caranya adalah ketik git clone setelah itu diikuti url dari github bagian 'code' lalu dienter
lalu ketik code namafile/ atau setelah meng-clone ketik code and space

Make a change (mencatat perubahan)
git status  : menampilan status perubahan
git add     : menandai perubahan yang akan di simpan.  git add namafile
git add .   : git add tapi langsung satu folder
git commit -m "<Messege>" : ketikkan git commit -m "isi kamu td ngerubah apa"
git reset <File> : mengembalikan ke sebelum git add
git reset --hard
 + (tambahan) : jika muncul pls tell me who u are, ketik git config --global.username "namamu y"
                lalu ketik git config --global.useremail "emailmu y"
git log      : mengecek apakah berhasil melakukan perubahan dan siapa yang melakukan perubahan
git diff     : menampilkan perubahan <jika muncul end ketik q (quit) untuk ke file directory>

Sync
git push   : lokal ke online
             ketik git remote add origin <link code dri github>
             ketik git remote -v untuk mengecek apakah sudah berhasil
             ketik git push origin master untuk mengupload di github

            
git pull   : klik git pull origin master
git fetch  : mengambil (mengunduh) pembaruan dari repositori remote tanpa menggabungkannya ke dalam cabang lokal Anda.
             ketik git fetch
             ketik git checkout namafile
             git branch
+ tambahan 
(jika ingin menghapus ) : git checkout master
                          git branch
                          git branch -D namafile


Branch
git branch 
git checkout
git merge
git tag.

+
git add .
git commit -m "....."
git push origin main

nano ~/.bashrc
    - if [[ $- != *i* ]]; then
    return
fi

function ok() {
    git add .
    git commit -m "update"
    git push origin main
}

if [ -f ~/.bash_aliases ]; then
    source ~/.bash_aliases
fi

nano ~/.bash_profile

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
if [ -f '/c/Users/VICTUS/anaconda3/Scripts/conda.exe' ]; then
    eval "$('/c/Users/VICTUS/anaconda3/Scripts/conda.exe' 'shell.bash' 'hook')"
fi
# <<< conda initialize <<<

function ok() {
    git add .
    git commit -m "update"
    git push origin main
}


if [ -f ~/.bash_aliases ]; then
    source ~/.bash_aliases
fi

safe :

function ok() {
    git status
    read -p "Lanjut commit? (y/n) " confirm
    if [[ $confirm == "y" ]]; then
        read -p "Commit message: " msg
        git add .
        git commit -m "$msg"
        git push origin main
    else
        echo "Commit dibatalkan."
    fi
}

atau

function ok() {
    git pull origin main  # Auto pull dulu biar up-to-date
    git status
    read -p "Lanjut commit? (y/n) " confirm
    if [[ $confirm == "y" ]]; then
        read -p "Commit message: " msg
        git add .
        git commit -m "$msg"
        git push origin main
    else
        echo "Commit dibatalkan."
    fi
}

atau

function ok() {
  git add .
  git commit -m "${1:-update}"
  git push
  echo "Pushed with message: ${1:-update}"
}

source ~/.bashrc









